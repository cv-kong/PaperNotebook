<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* 图像融合，实验结果可视化</c>
<l>dir_img := '../../Papers/ImageFusion/images/'</l>
<c></c>
<c></c>
<c>* 目标图片</c>
<l>read_image (Image, '00137.jpg')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>rotate_image (Image, ImageRotate, 90, 'constant')</l>
<l>zoom_image_size (ImageRotate, ImageRotate, Width, Height, 'constant')</l>
<l>crop_rectangle1 (Image, ImagePart, 100, 100, Height-1, Width-1)</l>
<l>zoom_image_size (ImagePart, ImageZoom, Width, Height, 'constant')</l>
<l>mirror_image (Image, ImageMirror_row, 'row')</l>
<l>mirror_image (Image, ImageMirror_col, 'column')</l>
<l>concat_obj (ImageRotate, ImageZoom, ImageRotate)</l>
<l>concat_obj (ImageRotate, ImageMirror_row, ImageRotate)</l>
<l>concat_obj (ImageRotate, ImageMirror_col, ImageRotate)</l>
<c>* 拼凑增强后图片</c>
<l>tile_images (ImageRotate, TiledImage, 2, 'vertical')</l>
<l>write_image (TiledImage, 'jpg', 0, dir_img + 'image_augument')</l>
<c></c>
<c>*噪声</c>
<c></c>
<l>read_image (Image1, 'printer_chip/printer_chip_01')</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="make_yolov5_path">
<interface>
<ic>
<par name="result_path" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c>* 生成 yolov5 数据集路径</c>
<l>images_path_train := result_path+'/images/train'</l>
<l>labels_path_train := result_path+'/labels/train'</l>
<l>images_path_val := result_path+'/images/val'</l>
<l>labels_path_val := result_path+'/labels/val'</l>
<c></c>
<l>try</l>
<l>    make_dir (result_path)</l>
<l>    make_dir (result_path+'/images')</l>
<l>    make_dir (result_path+'/labels')</l>
<c></c>
<l>catch (except)</l>
<c></c>
<l>endtry</l>
<c></c>
<l>try</l>
<c></c>
<l>    make_dir (images_path_train)</l>
<l>    make_dir (labels_path_train)</l>
<l>    make_dir (images_path_val)</l>
<l>    make_dir (labels_path_val)</l>
<l>catch (except)</l>
<l>    return ()</l>
<l>endtry</l>
<c></c>
</body>
<docu id="make_yolov5_path">
<parameters>
<parameter id="result_path"/>
</parameters>
</docu>
</procedure>
<procedure name="save_vis_images">
<interface>
<io>
<par name="Image_or" base_type="iconic" dimension="0"/>
<par name="Rectangle" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
<par name="save_file_name" base_type="ctrl" dimension="0"/>
<par name="name" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>reduce_domain (Image_or, Rectangle, ImageReduced)</l>
<l>crop_domain (ImageReduced, ImagePart)</l>
<l>dev_clear_window ()</l>
<l>dev_display (Image_or)</l>
<l>dev_set_color ('blue')</l>
<l>dev_set_line_width (3)</l>
<l>dev_display (Rectangle)</l>
<l>dump_window_image (Image, WindowHandle)</l>
<l>write_image (ImagePart, 'jpg', 0, save_file_name + '/' + name + '_part')</l>
<l>write_image (Image, 'jpg', 0, save_file_name + '/' + name)</l>
<l>return ()</l>
</body>
<docu id="save_vis_images">
<parameters>
<parameter id="Image_or"/>
<parameter id="Rectangle"/>
<parameter id="WindowHandle"/>
<parameter id="name"/>
<parameter id="save_file_name"/>
</parameters>
</docu>
</procedure>
</hdevelop>
